# turn the numbers inside square brackets into lower bounds and upper bounds
# first grab the whole mm string when its there and remove the [, -, and ]
tmp <- str_split(mm$maternal_mortality, "[\\[\\-\\]]")
# get rid of all but the first number in the maternal mortality column
mm$maternal_mortality <- str_replace(mm$maternal_mortality, "[\\[][0-9]*[-][0-9]*[\\]]", "")
# create the upper and lower bound lists
mm_lower_bound <- vector(length = length(tmp), mode = "character")
mm_upper_bound <- vector(length = length(tmp), mode = "character")
i = 1
for (ss in tmp) {
mm_lower_bound[i] = ss[2]
mm_upper_bound[i] = ss[3]
i <- i + 1
}
# add the maternal mortality lower and upper bounds columns to the tibble
mm <- mutate(mm, mm_lower_bound)
mm <- mutate(mm, mm_upper_bound)
# convert the maternal mortality columns to numeric
mm$maternal_mortality <- as.numeric(mm$maternal_mortality)
mm$mm_lower_bound <- as.numeric(mm$mm_lower_bound)
mm$mm_upper_bound <- as.numeric(mm$mm_upper_bound)
# create a seperate row for each year of skilled health care percentage data
year_range_loc = str_detect(mm$year, "-")
i = 1
offset = 0
mm
mm_org <- mm
i = 2
ys <- str_split(mm$year[i + offset], "-")
mm$year[i + offset] <- ys[[1]][1]
mm
mm <- rbind(mm[1:i + offset,], mm[i + offset,], mm[-(1:i + offset),])
mm
mm$year[i + offset] <- ys[[1]][2]
mm
mm$year[i + offset + 1] <- ys[[1]][2]
mm
mm$year[i + offset] <- ys[[1]][1]
mm
offset
offset = 1
i = 6
ys <- str_split(mm$year[i + offset], "-")
ys
mm
mm$year[i + offset] <- ys[[1]][1]
mm
mm <- rbind(mm[1:i + offset,], mm[i + offset,], mm[-(1:i + offset),])
mm
length(mm)
dim(mm)
dim(mm)[1]
mm$year[i + offset + 1] <- ys[[1]][2]
mm
offset <- offset + 1
offset
i <- 10
str_split(mm$year[i + offset], "-")
print(mm, n = 20)
ys <- str_split(mm$year[i + offset], "-")
mm$year[i + offset] <- ys[[1]][1]
mm <- rbind(mm[1:i + offset,], mm[i + offset,], mm[-(1:i + offset),])
mm$year[i + offset + 1] <- ys[[1]][2]
print(mm, n = 20)
rm(list = ls())
mm <- read_csv("../data/xmart.csv")
names(mm) <- c("country", "year", "maternal_mortality", "skilled_health_percentage")
# remove spaces in maternal mortality numbers where commas should be
mm$maternal_mortality <- str_replace_all(mm$maternal_mortality, "[\\s]+", "")
# turn the numbers inside square brackets into lower bounds and upper bounds
# first grab the whole mm string when its there and remove the [, -, and ]
tmp <- str_split(mm$maternal_mortality, "[\\[\\-\\]]")
# get rid of all but the first number in the maternal mortality column
mm$maternal_mortality <- str_replace(mm$maternal_mortality, "[\\[][0-9]*[-][0-9]*[\\]]", "")
# create the upper and lower bound lists
mm_lower_bound <- vector(length = length(tmp), mode = "character")
mm_upper_bound <- vector(length = length(tmp), mode = "character")
i = 1
for (ss in tmp) {
mm_lower_bound[i] = ss[2]
mm_upper_bound[i] = ss[3]
i <- i + 1
}
# add the maternal mortality lower and upper bounds columns to the tibble
mm <- mutate(mm, mm_lower_bound)
mm <- mutate(mm, mm_upper_bound)
# convert the maternal mortality columns to numeric
mm$maternal_mortality <- as.numeric(mm$maternal_mortality)
mm$mm_lower_bound <- as.numeric(mm$mm_lower_bound)
mm$mm_upper_bound <- as.numeric(mm$mm_upper_bound)
# create a seperate row for each year of skilled health care percentage data
year_range_loc = str_detect(mm$year, "-")
i = 1
offset = 0
mm
for (y in year_range_loc){
if (year_range_loc[i]) {
ys <- str_split(mm$year[i + offset], "-")
mm$year[i + offset] <- ys[[1]][1]
# mm <- rbind(mm[1:i + offset,], mm[i + offset,], mm[-(1:i + offset),])
mm <- rbind(mm, mm[i + offset,])
mm$year[i + offset + 1] <- ys[[1]][2]
offset <- offset + 1
}
i = i + 1
}
mm
i
rm(list=ls())
mm <- read_csv("../data/xmart.csv")
names(mm) <- c("country", "year", "maternal_mortality", "skilled_health_percentage")
# remove spaces in maternal mortality numbers where commas should be
mm$maternal_mortality <- str_replace_all(mm$maternal_mortality, "[\\s]+", "")
# turn the numbers inside square brackets into lower bounds and upper bounds
# first grab the whole mm string when its there and remove the [, -, and ]
tmp <- str_split(mm$maternal_mortality, "[\\[\\-\\]]")
# get rid of all but the first number in the maternal mortality column
mm$maternal_mortality <- str_replace(mm$maternal_mortality, "[\\[][0-9]*[-][0-9]*[\\]]", "")
# create the upper and lower bound lists
mm_lower_bound <- vector(length = length(tmp), mode = "character")
mm_upper_bound <- vector(length = length(tmp), mode = "character")
i = 1
for (ss in tmp) {
mm_lower_bound[i] = ss[2]
mm_upper_bound[i] = ss[3]
i <- i + 1
}
# add the maternal mortality lower and upper bounds columns to the tibble
mm <- mutate(mm, mm_lower_bound)
mm <- mutate(mm, mm_upper_bound)
# convert the maternal mortality columns to numeric
mm$maternal_mortality <- as.numeric(mm$maternal_mortality)
mm$mm_lower_bound <- as.numeric(mm$mm_lower_bound)
mm$mm_upper_bound <- as.numeric(mm$mm_upper_bound)
# create a seperate row for each year of skilled health care percentage data
year_range_loc = str_detect(mm$year, "-")
i = 1
offset = 0
for (y in year_range_loc){
if (year_range_loc[i]) {
ys <- str_split(mm$year[i + offset], "-")
mm$year[i + offset] <- ys[[1]][1]
# mm <- rbind(mm[1:i + offset,], mm[i + offset,], mm[-(1:i + offset),])
# mm <- rbind(mm, mm[i + offset,])
# mm$year[i + offset + 1] <- ys[[1]][2]
# offset <- offset + 1
}
i = i + 1
}
mm_org
mm
print(mm, n=20)
rm(list=ls())
mm <- read_csv("../data/xmart.csv")
names(mm) <- c("country", "year", "maternal_mortality", "skilled_health_percentage")
# remove spaces in maternal mortality numbers where commas should be
mm$maternal_mortality <- str_replace_all(mm$maternal_mortality, "[\\s]+", "")
# turn the numbers inside square brackets into lower bounds and upper bounds
# first grab the whole mm string when its there and remove the [, -, and ]
tmp <- str_split(mm$maternal_mortality, "[\\[\\-\\]]")
# get rid of all but the first number in the maternal mortality column
mm$maternal_mortality <- str_replace(mm$maternal_mortality, "[\\[][0-9]*[-][0-9]*[\\]]", "")
# create the upper and lower bound lists
mm_lower_bound <- vector(length = length(tmp), mode = "character")
mm_upper_bound <- vector(length = length(tmp), mode = "character")
i = 1
for (ss in tmp) {
mm_lower_bound[i] = ss[2]
mm_upper_bound[i] = ss[3]
i <- i + 1
}
# add the maternal mortality lower and upper bounds columns to the tibble
mm <- mutate(mm, mm_lower_bound)
mm <- mutate(mm, mm_upper_bound)
# convert the maternal mortality columns to numeric
mm$maternal_mortality <- as.numeric(mm$maternal_mortality)
mm$mm_lower_bound <- as.numeric(mm$mm_lower_bound)
mm$mm_upper_bound <- as.numeric(mm$mm_upper_bound)
# create a seperate row for each year of skilled health care percentage data
year_range_loc = str_detect(mm$year, "-")
mm_new <- data.frame(country = character(), year = character(), maternal_mortality = double(),
mm_lower_bound = double(), mm_upper_bound = double())
i = 1
offset = 0
for (y in year_range_loc){
if (year_range_loc[i]) {
ys <- str_split(mm$year[i + offset], "-")
mm$year[i + offset] <- ys[[1]][1]
# mm <- rbind(mm[1:i + offset,], mm[i + offset,], mm[-(1:i + offset),])
mm_new <- rbind(mm_new, mm[i + offset,])
# mm$year[i + offset + 1] <- ys[[1]][2]
# offset <- offset + 1
}
i = i + 1
}
mm
print(mm, n=20)
mm_new
rm(list=ls())
mm <- read_csv("../data/xmart.csv")
names(mm) <- c("country", "year", "maternal_mortality", "skilled_health_percentage")
# remove spaces in maternal mortality numbers where commas should be
mm$maternal_mortality <- str_replace_all(mm$maternal_mortality, "[\\s]+", "")
# turn the numbers inside square brackets into lower bounds and upper bounds
# first grab the whole mm string when its there and remove the [, -, and ]
tmp <- str_split(mm$maternal_mortality, "[\\[\\-\\]]")
# get rid of all but the first number in the maternal mortality column
mm$maternal_mortality <- str_replace(mm$maternal_mortality, "[\\[][0-9]*[-][0-9]*[\\]]", "")
# create the upper and lower bound lists
mm_lower_bound <- vector(length = length(tmp), mode = "character")
mm_upper_bound <- vector(length = length(tmp), mode = "character")
i = 1
for (ss in tmp) {
mm_lower_bound[i] = ss[2]
mm_upper_bound[i] = ss[3]
i <- i + 1
}
# add the maternal mortality lower and upper bounds columns to the tibble
mm <- mutate(mm, mm_lower_bound)
mm <- mutate(mm, mm_upper_bound)
# convert the maternal mortality columns to numeric
mm$maternal_mortality <- as.numeric(mm$maternal_mortality)
mm$mm_lower_bound <- as.numeric(mm$mm_lower_bound)
mm$mm_upper_bound <- as.numeric(mm$mm_upper_bound)
# create a seperate row for each year of skilled health care percentage data
year_range_loc = str_detect(mm$year, "-")
mm_new <- data.frame(country = character(), year = character(), maternal_mortality = double(),
mm_lower_bound = double(), mm_upper_bound = double())
i = 1
offset = 0
for (y in year_range_loc){
if (year_range_loc[i]) {
ys <- str_split(mm$year[i + offset], "-")
mm$year[i + offset] <- ys[[1]][1]
# mm <- rbind(mm[1:i + offset,], mm[i + offset,], mm[-(1:i + offset),])
newrow <- mm[i + offset,]
newrow$year <- ys[[1]][2]
mm_new <- rbind(mm_new, newrow)
# mm$year[i + offset + 1] <- ys[[1]][2]
# offset <- offset + 1
}
i = i + 1
}
mm_new
mm
mm <- rbind(mm, mm_new)
mm
mm$year <- as.integer(mm$year)
# read in and tidy up the gross national income data
gni <- read_csv("../data/WHS9_93.csv", skip = 1)
# get rid of the space where the comma should be in the 2013 column and convert column to integer
gni$`2013` <- str_replace_all(gni$`2013`, "[\\s]+", "")
gni$`2013` <- as.integer(gni$`2013`)
# reformat so that there is one entry per country per year
gni <- select(gni, Country  )
gni <- gather(gni, `2013`:`2012`:`2011`:`2010`:`2009`:`2008`:`2007`:`2006`:`2005`:`2004`:`2003`:
`2002`:`2001`:`2000`:`1999`:`1998`:`1997`:`1996`:`1995`:`1994`:`1993`:`1992`:
`1991`:`1990`, key = "year", value = gross_nat_income)
gni
gni <- read_csv("../data/WHS9_93.csv", skip = 1)
gni
gni$`2013` <- str_replace_all(gni$`2013`, "[\\s]+", "")
gni
gni$`2013` <- as.integer(gni$`2013`)
gni
gni <- gather(gni, `2013`:`2012`:`2011`:`2010`:`2009`:`2008`:`2007`:`2006`:`2005`:`2004`:`2003`:
`2002`:`2001`:`2000`:`1999`:`1998`:`1997`:`1996`:`1995`:`1994`:`1993`:`1992`:
`1991`:`1990`, key = "year", value = gross_nat_income)
gni
183*25
year
mm
tmp <- inner_join(mm, gni, by = c("country" = "Country", "year" = "year"))
gni$year <- as.integer(gni$year)
tmp <- inner_join(mm, gni, by = c("country" = "Country", "year" = "year"))
tmp
filter(gni, country == "Afghanistan")
filter(gni, Country == "Afghanistan")
print(filter(gni, Country == "Afghanistan"), n = 30)
tmp <- read_csv("../data/WHS9_93.csv", skip = 1)
tmp
tmp[[1]]
tmp[1,]
print(filter(gni, Country == "Afghanistan"), n = 30)
gni
gni <- na.omit(gni)
gni
mm_gni_clean <- inner_join(mm, gni, by = c("country" = "Country", "year" = "year"))
mm_gni_clean
read_csv("../data/xmart.csv")
read_csv("../data/WHS9_93.csv", skip = 1)
mm %>%
ggplot(aes(x = maternal_mortality, y = gross_nat_income, color = color)) +
geom_point(show.legend = TRUE) +
ggtitle("Maternal Mortality vs Gross National Income") +
labs(x = "Per Capita Gross National Income ($)",
y = "Maternal Mortality Ratio (per 100,000 live births) (") +
scale_color_viridis(discrete = TRUE)
library(viridis)
library(choroplethr)
mm %>%
ggplot(aes(x = maternal_mortality, y = gross_nat_income, color = color)) +
geom_point(show.legend = TRUE) +
ggtitle("Maternal Mortality vs Gross National Income") +
labs(x = "Per Capita Gross National Income ($)",
y = "Maternal Mortality Ratio (per 100,000 live births) (") +
scale_color_viridis(discrete = TRUE)
mm
mm_gni_clean %>%
ggplot(aes(x = maternal_mortality, y = gross_nat_income, color = color)) +
geom_point(show.legend = TRUE) +
ggtitle("Maternal Mortality vs Gross National Income") +
labs(x = "Per Capita Gross National Income ($)",
y = "Maternal Mortality Ratio (per 100,000 live births) (") +
scale_color_viridis(discrete = TRUE)
mm_gni_clean %>%
ggplot(aes(x = maternal_mortality, y = gross_nat_income)) +
geom_point(show.legend = TRUE) +
ggtitle("Maternal Mortality vs Gross National Income") +
labs(x = "Per Capita Gross National Income ($)",
y = "Maternal Mortality Ratio (per 100,000 live births) (") +
scale_color_viridis(discrete = TRUE)
mm_gni_clean %>%
ggplot(aes(x = maternal_mortality, y = gross_nat_income)) +
geom_point(show.legend = TRUE) +
ggtitle("Maternal Mortality vs Gross National Income") +
labs(x = "Per Capita Gross National Income ($)",
y = "Maternal Mortality Ratio (per 100,000 live births) (") +
scale_color_viridis(discrete = TRUE) +
theme_bw()
mm_gni_clean
filter(mm_gni_clean, gross_nat_income > 2000)
filter(mm_gni_clean, maternal_mortality > 2000)
mm_gni_clean %>%
ggplot(aes(y = maternal_mortality, x = gross_nat_income)) +
geom_point(show.legend = TRUE) +
ggtitle("Maternal Mortality vs Gross National Income") +
labs(x = "Per Capita Gross National Income ($)",
y = "Maternal Mortality Ratio (per 100,000 live births) (") +
scale_color_viridis(discrete = TRUE) +
theme_bw()
mm_gni_clean
filter(mm_gni_clean, maternal_mortality > 1000)
filter(mm_gni_clean, gross_nat_income > 30000)
filter(mm_gni_clean, gross_nat_income > 30000)
mm_gni_clean
filter(mm_gni_clean, gross_nat_income > 30000)
mm_gni_clean %>%
ggplot(aes(x = gross_nat_income, y = maternal_mortality)) +
geom_point(show.legend = TRUE) +
ggtitle("Maternal Mortality vs Gross National Income") +
labs(x = "Per Capita Gross National Income ($)",
y = "Maternal Mortality Ratio (per 100,000 live births) (") +
scale_color_viridis(discrete = TRUE) +
theme_bw()
mm_gni_clean
mm_gni_clean %>%
ggplot(aes(x = gross_nat_income, y = skilled_health_percentage)) +
geom_point(show.legend = TRUE) +
ggtitle("Percentage of Births Attended by Skilled Health Care vs Gross National Income") +
labs(x = "Per Capita Gross National Income ($)",
y = "Percentage of Births Attended by Skilled Health Care") +
scale_color_viridis(discrete = TRUE) +
theme_bw()
filter(mm_gni_clean, gross_nat_income > 25000 & skilled_health_percentage < 75)
filter(mm_gni_clean, country == "Equatorial Guinea")
library(tidyverse)
library(stringr)
library(broom)
library(viridis)
library(choroplethr)
mm <- read_csv("../data/xmart.csv")
names(mm) <- c("country", "year", "maternal_mortality", "skilled_health_percentage")
rm(list=ls())
library(tidyverse)
library(stringr)
library(broom)
library(viridis)
library(choroplethr)
mm <- read_csv("../data/xmart.csv")
names(mm) <- c("country", "year", "maternal_mortality", "skilled_health_percentage")
tmp
mm
str_split(mm$maternal_mortality, "[\\[\\-\\]]")
dim(tmp)
tmp
dim(mm)
tmp <- str_split(mm$maternal_mortality, "[\\[\\-\\]]")
tmp
dim(tmp)
length(tmp)
rm(list = ls())
library(tidyverse)
library(stringr)
library(broom)
library(viridis)
library(choroplethr)
print("debug 1")
mm <- read_csv("../data/xmart.csv")
names(mm) <- c("country", "year", "maternal_mortality", "skilled_health_percentage")
mm$maternal_mortality <- str_replace_all(mm$maternal_mortality, "[\\s]+", "")
tmp <- str_split(mm$maternal_mortality, "[\\[\\-\\]]")
mm$maternal_mortality <- str_replace(mm$maternal_mortality, "[\\[][0-9]*[-][0-9]*[\\]]", "")
mm_lower_bound <- vector(length = length(tmp), mode = "character")
mm_upper_bound <- vector(length = length(tmp), mode = "character")
i = 1
for (ss in tmp) {
mm_lower_bound[i] = ss[2]
mm_upper_bound[i] = ss[3]
i <- i + 1
}
mm <- mutate(mm, mm_lower_bound)
mm <- mutate(mm, mm_upper_bound)
# convert the maternal mortality columns to numeric
mm$maternal_mortality <- as.numeric(mm$maternal_mortality)
mm$mm_lower_bound <- as.numeric(mm$mm_lower_bound)
mm$mm_upper_bound <- as.numeric(mm$mm_upper_bound)
# create a seperate row for each year of skilled health care percentage data
year_range_loc = str_detect(mm$year, "-")
mm_new <- data.frame(country = character(), year = character(), maternal_mortality = double(),
mm_lower_bound = double(), mm_upper_bound = double())
i = 1
for (y in year_range_loc){
if (year_range_loc[i]) {
ys <- str_split(mm$year[i], "-")
mm$year[i] <- ys[[1]][1]
newrow <- mm[i,]
newrow$year <- ys[[1]][2]
mm_new <- rbind(mm_new, newrow)
}
i = i + 1
}
mm <- rbind(mm, mm_new)
# make the year column numeric
mm$year <- as.integer(mm$year)
mm
# read in and tidy up the maternal mortality data
print("debug 1")
mm <- read_csv("../data/xmart.csv")
names(mm) <- c("country", "year", "maternal_mortality", "skilled_health_percentage")
# remove spaces in maternal mortality numbers where commas should be
mm$maternal_mortality <- str_replace_all(mm$maternal_mortality, "[\\s]+", "")
# turn the numbers inside square brackets into lower bounds and upper bounds
# first grab the whole mm string when its there and remove the [, -, and ]
tmp <- str_split(mm$maternal_mortality, "[\\[\\-\\]]")
# get rid of all but the first number in the maternal mortality column
mm$maternal_mortality <- str_replace(mm$maternal_mortality, "[\\[][0-9]*[-][0-9]*[\\]]", "")
# create the upper and lower bound lists
mm_lower_bound <- vector(length = length(tmp), mode = "character")
mm_upper_bound <- vector(length = length(tmp), mode = "character")
i = 1
for (ss in tmp) {
mm_lower_bound[i] = ss[2]
mm_upper_bound[i] = ss[3]
i <- i + 1
}
# add the maternal mortality lower and upper bounds columns to the tibble
mm <- mutate(mm, mm_lower_bound)
mm <- mutate(mm, mm_upper_bound)
# convert the maternal mortality columns to numeric
mm$maternal_mortality <- as.numeric(mm$maternal_mortality)
mm$mm_lower_bound <- as.numeric(mm$mm_lower_bound)
mm$mm_upper_bound <- as.numeric(mm$mm_upper_bound)
# create a seperate row for each year of skilled health care percentage data
year_range_loc = str_detect(mm$year, "-")
mm_new <- data.frame(country = character(), year = character(), maternal_mortality = double(),
mm_lower_bound = double(), mm_upper_bound = double())
i = 1
for (y in year_range_loc){
if (year_range_loc[i]) {
ys <- str_split(mm$year[i], "-")
mm$year[i] <- ys[[1]][1]
newrow <- mm[i,]
newrow$year <- ys[[1]][2]
mm_new <- rbind(mm_new, newrow)
}
i = i + 1
}
mm <- rbind(mm, mm_new)
# make the year column numeric
mm$year <- as.integer(mm$year)
mm
print("debug 1")
mm <- read_csv("../data/xmart.csv")
names(mm) <- c("country", "year", "maternal_mortality", "skilled_health_percentage")
# remove spaces in maternal mortality numbers where commas should be
mm$maternal_mortality <- str_replace_all(mm$maternal_mortality, "[\\s]+", "")
# turn the numbers inside square brackets into lower bounds and upper bounds
# first grab the whole mm string when its there and remove the [, -, and ]
tmp <- str_split(mm$maternal_mortality, "[\\[\\-\\]]")
# get rid of all but the first number in the maternal mortality column
mm$maternal_mortality <- str_replace(mm$maternal_mortality, "[\\[][0-9]*[-][0-9]*[\\]]", "")
# create the upper and lower bound lists
mm_lower_bound <- vector(length = length(tmp), mode = "character")
mm_upper_bound <- vector(length = length(tmp), mode = "character")
i = 1
for (ss in tmp) {
mm_lower_bound[i] = ss[2]
mm_upper_bound[i] = ss[3]
i <- i + 1
}
# add the maternal mortality lower and upper bounds columns to the tibble
mm <- mutate(mm, mm_lower_bound)
mm <- mutate(mm, mm_upper_bound)
# convert the maternal mortality columns to numeric
mm$maternal_mortality <- as.numeric(mm$maternal_mortality)
mm$mm_lower_bound <- as.numeric(mm$mm_lower_bound)
mm$mm_upper_bound <- as.numeric(mm$mm_upper_bound)
# create a seperate row for each year of skilled health care percentage data
mm
exit
quit()
